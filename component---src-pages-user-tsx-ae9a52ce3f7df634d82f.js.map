{"version":3,"file":"component---src-pages-user-tsx-ae9a52ce3f7df634d82f.js","mappings":"oNAwCA,MAnCuBA,IAAkD,IAAjD,SAAEC,GAAyCD,EACjE,MAAM,EAACE,EAAQ,EAACC,IAAcC,EAAAA,EAAAA,WAAS,IACjC,EAACC,EAAU,EAACC,IAAgBF,EAAAA,EAAAA,WAAS,GA2B3C,OAzBAG,EAAAA,EAAAA,YAAU,KACcC,WACpB,MAAMC,EAAOC,EAAAA,EAAKC,YAClB,GAAKF,EAIL,IAAK,IAADG,EACF,MAAMC,QAAgBC,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAASC,OAAOR,EAAKS,OACtDL,EAAQM,UAAYC,QAAsB,QAAfR,EAACC,EAAQQ,cAAM,IAAAT,OAAA,EAAdA,EAAgBU,YAC9ChB,GAAa,IAEbiB,EAAAA,EAAAA,UAAS,gBAEb,CAAE,MAAOC,GACPC,QAAQD,MAAM,gDAAiDA,IAC/DD,EAAAA,EAAAA,UAAS,SACX,CAAC,QACCpB,GAAW,EACb,MAfEoB,EAAAA,EAAAA,UAAS,SAeX,EAGFG,EAAe,GACd,CAACH,EAAAA,WAEArB,EAAgByB,EAAAA,cAAA,SAAG,eAClBtB,EAEEsB,EAAAA,cAAAA,EAAAA,SAAA,KAAG1B,GAFa,IAED,E,UC9BxB,MAAM2B,E,QAAqB,GAc3B,MAZanB,IAETkB,EAAAA,cAACE,EAAc,KACXF,EAAAA,cAACG,EAAAA,QAAM,CAACT,KAAMO,GACVD,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,SAAG,6C","sources":["webpack://coach-ana-briones/./src/components/protectedRoute.tsx","webpack://coach-ana-briones/./src/pages/user.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { navigate } from \"gatsby\";\nimport { auth, db } from \"../firebaseConfig\";\nimport { doc, getDoc } from \"firebase/firestore\";\n\nconst ProtectedRoute = ({ children }: { children: React.ReactNode }) => {\n  const [loading, setLoading] = useState(true);\n  const [isAllowed, setIsAllowed] = useState(false);\n\n  useEffect(() => {\n    const checkApproval = async () => {\n      const user = auth.currentUser;\n      if (!user) {\n        navigate(\"/login\" as unknown as number); // Redirige al inicio de sesión si no hay usuario\n        return;\n      }\n      try {\n        const userDoc = await getDoc(doc(db, \"users\", String(user.uid))); // Asegúrate de convertir user.uid a string\n        if (userDoc.exists() && Boolean(userDoc.data()?.isApproved)) {\n          setIsAllowed(true);\n        } else {\n          navigate(\"/not-approved\" as unknown as number); // Redirige si el usuario no está aprobado\n        }\n      } catch (error) {\n        console.error(\"Error al verificar la aprobación del usuario:\", error);\n        navigate(\"/login\" as unknown as number); // Redirige en caso de error\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkApproval();\n  }, [navigate]);\n\n  if (loading) return <p>Cargando...</p>;\n  if (!isAllowed) return null;\n\n  return <>{children}</>;\n};\n\nexport default ProtectedRoute;\n","import React from \"react\";\nimport ProtectedRoute from \"../components/protectedRoute\";\nimport Layout from \"./layout\";\nimport { graphql } from \"gatsby\";\nimport { Company } from \"../interfaces\";\nimport data from \"../data/data.json\";\n\nconst info: Company = data[0];\n\nconst user = () => {\n  return (\n    <ProtectedRoute>\n        <Layout data={info}>\n            <h1>Área Protegida</h1>\n            <p>Solo usuarios aprobados pueden ver esto.</p>\n\n        </Layout>\n    </ProtectedRoute>\n  );\n};\n\nexport default user;\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;"],"names":["_ref","children","loading","setLoading","useState","isAllowed","setIsAllowed","useEffect","async","user","auth","currentUser","_userDoc$data","userDoc","getDoc","doc","db","String","uid","exists","Boolean","data","isApproved","navigate","error","console","checkApproval","React","info","ProtectedRoute","Layout"],"sourceRoot":""}