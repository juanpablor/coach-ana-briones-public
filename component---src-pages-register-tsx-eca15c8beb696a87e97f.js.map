{"version":3,"file":"component---src-pages-register-tsx-eca15c8beb696a87e97f.js","mappings":"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","sources":["webpack://coach-ana-briones/./src/pages/register.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { graphql, type HeadFC, type PageProps } from \"gatsby\";\nimport { auth } from \"../firebaseConfig\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport Layout from \"./layout\";\nimport { Company } from \"../interfaces\";\nimport data from \"../data/data.json\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { db } from \"../firebaseConfig\";\nimport { PiCaretCircleLeft } from \"react-icons/pi\";\nimport { Helmet } from \"react-helmet\";\n\nconst { useTranslation } = require(\"gatsby-plugin-react-i18next\");\n\nconst info: Company = data[0];\n\nconst Register = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [phone, setPhone] = useState(\"\"); // Teléfono\n  const [address, setAddress] = useState(\"\"); // Dirección\n  const [postalCode, setPostalCode] = useState(\"\"); // Código postal\n  const [country, setCountry] = useState(\"\"); // País\n  const [message, setMessage] = useState(\"\");\n\n  const { t } = useTranslation();\n\n  const handleRegister = async (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    try {\n      // Crear usuario en Firebase Auth\n      const userCredential = await createUserWithEmailAndPassword(\n        auth,\n        email,\n        password\n      );\n      const user = userCredential.user;\n\n      // Guardar datos adicionales en Firestore con el estado isApproved\n      await setDoc(doc(db, \"users\", user.uid), {\n        name,\n        email,\n        phone,\n        address,\n        postalCode,\n        country,\n        isApproved: false, // El usuario debe ser aprobado manualmente\n      });\n\n      setMessage(\"Registro exitoso. Pendiente de aprobación.\");\n    } catch (error) {\n      setMessage((error as Error).message);\n    }\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{t(\"keywords.titleRegister\")}</title>\n        <meta name=\"description\" content={t(\"keywords.metaRegister\") || \"\"} />\n      </Helmet>\n      <Layout data={info}>\n        <div className=\"bg-terciary p-4 \">\n          <form onSubmit={handleRegister} className={styles.container}>\n            <h1 className={styles.title}>Registro de Usuario</h1>\n\n            <div className={styles.groupItem}>\n              <label className={styles.label} htmlFor=\"name\">\n                Nombre completo\n              </label>\n              <input\n                type=\"name\"\n                id=\"name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                placeholder=\"Nombre completo\"\n                className={styles.input}\n                required\n              />\n            </div>\n\n            <div className={styles.groupItem}>\n              <label className={styles.label} htmlFor=\"email\">\n                Email\n              </label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"Correo electrónico\"\n                className={styles.input}\n                required\n              />\n            </div>\n\n            <div className={styles.groupItem}>\n              <label className={styles.label} htmlFor=\"password\">\n                Contraseña\n              </label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder=\"Contraseña\"\n                className={styles.input}\n                required\n              />\n            </div>\n\n            <div className={styles.groupItem}>\n              <label className={styles.label} htmlFor=\"phone\">\n                Teléfono\n              </label>\n              <input\n                type=\"text\"\n                id=\"phone\"\n                value={phone}\n                onChange={(e) => setPhone(e.target.value)}\n                placeholder=\"Teléfono\"\n                className={styles.input}\n                required\n              />\n            </div>\n\n            <div className={styles.groupItem}>\n              <label className={styles.label} htmlFor=\"address\">\n                Dirección\n              </label>\n              <input\n                type=\"text\"\n                id=\"address\"\n                value={address}\n                onChange={(e) => setAddress(e.target.value)}\n                placeholder=\"Dirección\"\n                className={styles.input}\n                required\n              />\n            </div>\n\n            <div className=\"flex mb-4\">\n              <div className={`${styles.groupItem} ${styles.twoElements} mr-2`}>\n                <label className={styles.label} htmlFor=\"postalCode\">\n                  Código Postal\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"postalCode\"\n                  value={postalCode}\n                  onChange={(e) => setPostalCode(e.target.value)}\n                  placeholder=\"Código Postal\"\n                  className={styles.input}\n                  required\n                />\n              </div>\n\n              <div className={`${styles.groupItem} ${styles.twoElements} ml-2`}>\n                <label className={styles.label} htmlFor=\"country\">\n                  País\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"country\"\n                  value={country}\n                  onChange={(e) => setCountry(e.target.value)}\n                  placeholder=\"País\"\n                  className={styles.input}\n                  required\n                />\n              </div>\n            </div>\n\n            <div className={styles.groupItem}>\n              <button type=\"submit\" className={styles.submitButton}>\n                Registrar\n              </button>\n            </div>\n\n            {message && <p className={styles.message}>{message}</p>}\n          </form>\n        </div>\n      </Layout>\n    </>\n  );\n};\n\nexport default Register;\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n\nconst styles = {\n  container:\n    \"bg-secondary p-8 rounded-lg shadow-md w-full max-w-md mx-auto my-8\",\n  title: \"text-2xl font-bold mb-6 text-dark text-center\",\n  label: \"block text-dark font-medium\",\n  input:\n    \"w-full text-dark px-4 py-2 border border-terciary rounded-lg focus:outline-none focus:ring-2 focus:ring-primary\",\n  submitButton:\n    \"w-full bg-dark text-white py-2 px-4 rounded-lg hover:bg-terciary hover:text-dark transition\",\n  groupItem: \"mb-4\",\n  twoElements: \"w-1/2\",\n  message: \"mt-4 text-center text-dark font-medium\",\n};\n"],"names":["useTranslation","require","info","data","Register","name","setName","useState","email","setEmail","password","setPassword","phone","setPhone","address","setAddress","postalCode","setPostalCode","country","setCountry","message","setMessage","t","React","Helmet","content","Layout","className","onSubmit","async","e","preventDefault","user","createUserWithEmailAndPassword","auth","setDoc","doc","db","uid","isApproved","error","styles","container","title","groupItem","label","htmlFor","type","id","value","onChange","target","placeholder","input","required","twoElements","submitButton"],"sourceRoot":""}