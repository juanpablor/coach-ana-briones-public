{"version":3,"file":"component---src-pages-admin-tsx-cb275c6f15cc3f12e3ca.js","mappings":"oNAmCA,MA7B4BA,IAAkD,IAAjD,SAAEC,GAAyCD,EACtE,MAAM,EAACE,EAAQ,EAACC,IAAcC,EAAAA,EAAAA,WAAS,IACjC,EAACC,EAAQ,EAACC,IAAcF,EAAAA,EAAAA,WAAS,GAqBvC,OAnBAG,EAAAA,EAAAA,YAAU,KACWC,WACjB,MAAMC,EAAOC,EAAAA,EAAKC,YAClB,IAAKF,EAEH,YADAG,EAAAA,EAAAA,UAAS,UAGX,MAAMC,QAAgBC,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAASP,EAAKQ,MAC/CJ,EAAQK,UAAoC,UAAxBL,EAAQM,OAAOC,KACrCd,GAAW,IAEXM,EAAAA,EAAAA,UAAS,mBAEXT,GAAW,EAAM,EAGnBkB,EAAY,GACX,IAECnB,EAAgBoB,EAAAA,cAAA,SAAG,eAClBjB,EAEEiB,EAAAA,cAAAA,EAAAA,SAAA,KAAGrB,GAFW,IAEC,E,UCsExB,MA9EmBsB,KACjB,MAAM,EAACC,EAAM,EAACC,IAAYrB,EAAAA,EAAAA,UAAiB,KAE3CG,EAAAA,EAAAA,YAAU,KACWC,WACjB,MAAMkB,GAAIC,EAAAA,EAAAA,IACRC,EAAAA,EAAAA,IAAWZ,EAAAA,GAAI,UACfa,EAAAA,EAAAA,IAAM,aAAc,MAAM,IAGtBC,SADsBC,EAAAA,EAAAA,IAAQL,IACJM,KAAKC,KAAKlB,GAAGmB,OAAAC,OAAA,CAC3CC,GAAIrB,EAAIqB,IACLrB,EAAII,UAETM,EAASK,EAAU,EAErBO,EAAY,GACX,IAkBH,OACEf,EAAAA,cAAA,OAAKgB,UAAU,4DACbhB,EAAAA,cAAA,OAAKgB,UAAU,qDACbhB,EAAAA,cAAA,OAAKgB,UAAU,0CACbhB,EAAAA,cAAA,MAAIgB,UAAU,iCAAgC,qCAC9ChB,EAAAA,cAAA,UACEiB,QAhBW/B,UACnB,UACQgC,EAAAA,EAAAA,IAAQ9B,EAAAA,IACdE,EAAAA,EAAAA,UAAS,IACX,CAAE,MAAO6B,GACPC,QAAQD,MAAM,0BAA2BA,GACzCE,MAAM,8CACR,GAUQL,UAAU,iFACX,kBAIHhB,EAAAA,cAAA,MAAIgB,UAAU,aACXd,EAAMS,KAAKxB,GACVa,EAAAA,cAAA,MACEsB,IAAKnC,EAAK2B,GACVE,UAAU,uEAEVhB,EAAAA,cAAA,WACEA,EAAAA,cAAA,KAAGgB,UAAU,iCAAiC7B,EAAKoC,MACnDvB,EAAAA,cAAA,KAAGgB,UAAU,qBAAqB7B,EAAKqC,OACvCxB,EAAAA,cAAA,KAAGgB,UAAU,qBAAqB7B,EAAKsC,OACvCzB,EAAAA,cAAA,KAAGgB,UAAU,qBAAqB7B,EAAKuC,SACvC1B,EAAAA,cAAA,KAAGgB,UAAU,qBAAqB7B,EAAKwC,YACvC3B,EAAAA,cAAA,KAAGgB,UAAU,qBAAqB7B,EAAKyC,UAEzC5B,EAAAA,cAAA,UACEiB,QAASA,IA3CH/B,WAClB,MAAMK,GAAUE,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAASmC,SAC3BC,EAAAA,EAAAA,IAAUvC,EAAS,CAAEwC,YAAY,IACvC5B,EAASD,EAAM8B,QAAQ7C,GAASA,EAAK2B,KAAOe,IAAQ,EAwCzBI,CAAY9C,EAAK2B,IAChCE,UAAU,gGACX,eAMW,IAAjBd,EAAMgC,QACLlC,EAAAA,cAAA,KAAGgB,UAAU,kCAAiC,8CAG9C,ECrFV,MARkBmB,IAEZnC,EAAAA,cAACoC,EAAmB,KAClBpC,EAAAA,cAACC,EAAU,M","sources":["webpack://coach-ana-briones/./src/components/adminProtectedRoute.tsx","webpack://coach-ana-briones/./src/components/adminPanel.tsx","webpack://coach-ana-briones/./src/pages/admin.tsx"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { auth, db } from \"../firebaseConfig\";\nimport { getDoc, doc } from \"firebase/firestore\";\nimport { navigate } from \"gatsby\";\n\nconst AdminProtectedRoute = ({ children }: { children: React.ReactNode }) => {\n  const [loading, setLoading] = useState(true);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  useEffect(() => {\n    const checkAdmin = async () => {\n      const user = auth.currentUser;\n      if (!user) {\n        navigate(\"/login\" as unknown as number);\n        return;\n      }\n      const userDoc = await getDoc(doc(db, \"users\", user.uid));\n      if (userDoc.exists() && userDoc.data().role === \"admin\") {\n        setIsAdmin(true);\n      } else {\n        navigate(\"/not-authorized\" as unknown as number);\n      }\n      setLoading(false);\n    };\n\n    checkAdmin();\n  }, []);\n\n  if (loading) return <p>Cargando...</p>;\n  if (!isAdmin) return null;\n\n  return <>{children}</>;\n};\n\nexport default AdminProtectedRoute;\n","import { useState, useEffect } from \"react\";\nimport {\n  collection,\n  getDocs,\n  query,\n  where,\n  updateDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { db, auth } from \"../firebaseConfig\";\nimport React from \"react\";\nimport { signOut } from \"firebase/auth\";\nimport { navigate } from \"gatsby\";\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  phone?: string;\n  address?: string;\n  postalCode?: string;\n  country?: string;\n}\n\nconst AdminPanel = () => {\n  const [users, setUsers] = useState<User[]>([]); // Define el tipo User[] para el estado\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const q = query(\n        collection(db, \"users\"),\n        where(\"isApproved\", \"==\", false)\n      );\n      const querySnapshot = await getDocs(q);\n      const usersData = querySnapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      })) as User[]; // Asegúrate de castear al tipo User[]\n      setUsers(usersData);\n    };\n    fetchUsers();\n  }, []);\n\n  const approveUser = async (userId: string) => {\n    const userDoc = doc(db, \"users\", userId);\n    await updateDoc(userDoc, { isApproved: true });\n    setUsers(users.filter((user) => user.id !== userId));\n  };\n\n  const handleLogout = async () => {\n    try {\n      await signOut(auth); // Cierra la sesión\n      navigate(\"/\" as unknown as number); // Redirige a la página de login\n    } catch (error) {\n      console.error(\"Error al cerrar sesión:\", error);\n      alert(\"Error al cerrar sesión. Intenta nuevamente.\");\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-secondary flex flex-col items-center p-6\">\n      <div className=\"w-full max-w-4xl bg-dark shadow-lg rounded-lg p-6\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-2xl font-bold text-light\">Usuarios Pendientes de Aprobación</h2>\n          <button\n            onClick={handleLogout}\n            className=\"px-4 py-2 bg-red-500 text-white rounded-lg shadow hover:bg-red-600 transition\"\n          >\n            Cerrar Sesión\n          </button>\n        </div>\n        <ul className=\"space-y-4\">\n          {users.map((user) => (\n            <li\n              key={user.id}\n              className=\"flex justify-between items-center bg-light p-4 rounded-lg shadow-md\"\n            >\n              <div>\n                <p className=\"text-lg font-medium text-dark\">{user.name}</p>\n                <p className=\"text-sm text-dark\">{user.email}</p>\n                <p className=\"text-sm text-dark\">{user.phone}</p>\n                <p className=\"text-sm text-dark\">{user.address}</p>\n                <p className=\"text-sm text-dark\">{user.postalCode}</p>\n                <p className=\"text-sm text-dark\">{user.country}</p>\n              </div>\n              <button\n                onClick={() => approveUser(user.id)}\n                className=\"px-4 py-2 bg-dark text-light rounded-lg shadow hover:bg-secondary hover:text-dark transition\"\n              >\n                Aprobar\n              </button>\n            </li>\n          ))}\n        </ul>\n        {users.length === 0 && (\n          <p className=\"text-center text-gray-600 mt-6\">No hay usuarios pendientes de aprobación.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AdminPanel;\n","import React from \"react\";\nimport AdminProtectedRoute from \"../components/adminProtectedRoute\";\nimport AdminPanel from \"../components/adminPanel\";\nimport { graphql } from \"gatsby\";\n\nconst AdminPage = () => {\n  return (\n      <AdminProtectedRoute>\n        <AdminPanel />\n        </AdminProtectedRoute>\n  );\n};\n\nexport default AdminPage;\n\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;"],"names":["_ref","children","loading","setLoading","useState","isAdmin","setIsAdmin","useEffect","async","user","auth","currentUser","navigate","userDoc","getDoc","doc","db","uid","exists","data","role","checkAdmin","React","AdminPanel","users","setUsers","q","query","collection","where","usersData","getDocs","docs","map","Object","assign","id","fetchUsers","className","onClick","signOut","error","console","alert","key","name","email","phone","address","postalCode","country","userId","updateDoc","isApproved","filter","approveUser","length","AdminPage","AdminProtectedRoute"],"sourceRoot":""}