{"version":3,"file":"component---src-pages-register-tsx-1406ba931a64ead2336a.js","mappings":"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","sources":["webpack://coach-ana-briones/./src/pages/register.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { graphql, type HeadFC, type PageProps } from \"gatsby\";\nimport { auth } from \"../firebaseConfig\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport Layout from \"./layout\";\nimport { Company } from \"../interfaces\";\nimport data from \"../data/data.json\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { db } from \"../firebaseConfig\";\n\nconst info: Company = data[0];\n\nconst Register = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [phone, setPhone] = useState(\"\"); // Teléfono\n  const [address, setAddress] = useState(\"\"); // Dirección\n  const [postalCode, setPostalCode] = useState(\"\"); // Código postal\n  const [country, setCountry] = useState(\"\"); // País\n  const [message, setMessage] = useState(\"\");\n\n  const handleRegister = async (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    try {\n      // Crear usuario en Firebase Auth\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n  \n      // Guardar datos adicionales en Firestore con el estado isApproved\n      await setDoc(doc(db, \"users\", user.uid), {\n        name,\n        email,\n        phone,\n        address,\n        postalCode,\n        country,\n        isApproved: false, // El usuario debe ser aprobado manualmente\n      });\n  \n      setMessage(\"Registro exitoso. Pendiente de aprobación.\");\n    } catch (error) {\n      setMessage((error as Error).message);\n    }\n  };\n\n  return (\n    <Layout data={info}>\n        <form\n          onSubmit={handleRegister}\n          className={styles.container}\n        >\n          <h1 className={styles.title}>\n            Registro de Usuario\n          </h1>\n\n          <div className={styles.groupItem}>\n            <label className={styles.label} htmlFor=\"name\">\n              Nombre completo\n            </label>\n            <input\n              type=\"name\"\n              id=\"name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              placeholder=\"Nombre completo\"\n              className={styles.input}\n              required\n            />\n          </div>\n\n          <div className={styles.groupItem}>\n            <label className={styles.label} htmlFor=\"email\">\n              Email\n            </label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"Correo electrónico\"\n              className={styles.input}\n              required\n            />\n          </div>\n\n          <div className={styles.groupItem}>\n            <label className={styles.label} htmlFor=\"password\">\n              Contraseña\n            </label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"Contraseña\"\n              className={styles.input}\n              required\n            />\n          </div>\n\n          <div className={styles.groupItem}>\n            <label className={styles.label} htmlFor=\"phone\">\n              Teléfono\n            </label>\n            <input\n              type=\"text\"\n              id=\"phone\"\n              value={phone}\n              onChange={(e) => setPhone(e.target.value)}\n              placeholder=\"Teléfono\"\n              className={styles.input}\n              required\n            />\n          </div>\n\n          <div className={styles.groupItem}>\n            <label className={styles.label} htmlFor=\"address\">\n              Dirección\n            </label>\n            <input\n              type=\"text\"\n              id=\"address\"\n              value={address}\n              onChange={(e) => setAddress(e.target.value)}\n              placeholder=\"Dirección\"\n              className={styles.input}\n              required\n            />\n          </div>\n\n          <div className=\"flex mb-4\">\n            <div className={`${styles.groupItem} ${styles.twoElements} mr-2`}>\n              <label className={styles.label} htmlFor=\"postalCode\">\n                Código Postal\n              </label>\n              <input\n                type=\"text\"\n                id=\"postalCode\"\n                value={postalCode}\n                onChange={(e) => setPostalCode(e.target.value)}\n                placeholder=\"Código Postal\"\n                className={styles.input}\n                required\n              />\n            </div>\n\n            <div className={`${styles.groupItem} ${styles.twoElements} ml-2`}>\n              <label className={styles.label} htmlFor=\"country\">\n                País\n              </label>\n              <input\n                type=\"text\"\n                id=\"country\"\n                value={country}\n                onChange={(e) => setCountry(e.target.value)}\n                placeholder=\"País\"\n                className={styles.input}\n                required\n              />\n            </div>            \n          </div>\n\n          <div className={styles.groupItem}>\n            <button\n              type=\"submit\"\n              className={styles.submitButton}\n            >\n              Registrar\n            </button>\n          </div>\n\n          {message && (\n            <p className={styles.message}>{message}</p>\n          )}\n        </form>\n    </Layout>\n  );\n};\n\nexport default Register;\n\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n\nconst styles = {\n  container: \"bg-secondary p-8 rounded-lg shadow-md w-full max-w-md mx-auto my-8\",\n  title: \"text-2xl font-bold mb-6 text-dark text-center\",\n  label: \"block text-dark font-medium\",\n  input: \"w-full text-dark px-4 py-2 border border-terciary rounded-lg focus:outline-none focus:ring-2 focus:ring-primary\",\n  submitButton: \"w-full bg-dark text-white py-2 px-4 rounded-lg hover:bg-terciary hover:text-dark transition\",\n  groupItem: \"mb-4\",\n  twoElements: \"w-1/2\",\n  message: \"mt-4 text-center text-dark font-medium\"\n};"],"names":["info","data","Register","name","setName","useState","email","setEmail","password","setPassword","phone","setPhone","address","setAddress","postalCode","setPostalCode","country","setCountry","message","setMessage","React","Layout","onSubmit","async","e","preventDefault","user","createUserWithEmailAndPassword","auth","setDoc","doc","db","uid","isApproved","error","className","styles","container","title","groupItem","label","htmlFor","type","id","value","onChange","target","placeholder","input","required","twoElements","submitButton"],"sourceRoot":""}